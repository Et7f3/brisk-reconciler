name: Validate Pull Request

on: [push, pull_request]

jobs:
  build:
    # Job name is Greeting
    name: Build
    # This job runs on Linux
    runs-on: ${{ matrix.os }}
    strategy:
      # If we have many bug we can test on all plateform
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        ocaml_version: [4.04, 4.06, 4.07, 4.08]
    steps:
      - uses: actions/setup-node@v1
        with:
          node-version: 12
      - uses: actions/checkout@v1
      - uses: toolmantim/release-drafter@v5.2.0
        if: matrix.os == 'ubuntu-latest' && matrix.ocaml_version == '4.04'
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Install esy
        run: npm install -g @esy-nightly/esy
      - name: Install dependencies
        run: esy install -P package-ci-${{ matrix.ocaml_version }}
      - name: Check that lock directory are up-to-date. If this fails, run `esy install -P pacage-ci-${{ matrix.ocaml_version }}` and commit changes and push again.
        run: git diff --exit-code || (git remote set-url --push origin https://$GITHUB_ACTOR:$GITHUB_TOKEN@github.com/$GITHUB_REPOSITORY; git config user.name "Github Runner"; git config user.email "runner@runner.github.com"; git commit -am "Update lockdir"; git push origin HEAD:$GITHUB_REF)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Print esy cache
        id: print_esy_cache
        run: node .github/workflows/print_esy_cache.js
      - name: Try to restore dependencies cache
        if: matrix.os != 'windows-latest'
        id: deps-cache-non-win
        uses: actions/cache@v1
        with:
          path: ${{ steps.print_esy_cache.outputs.esy_cache }}
          key: ${{ matrix.os }}-${{ matrix.ocaml_version }}-${{ hashFiles('**/index.json') }}
      - name: Try to restore dependencies cache
        if: matrix.os == 'windows-latest'
        id: deps-cache-win
        uses: actions/cache@v1
        with:
          path: ${{ steps.print_esy_cache.outputs.esy_cache }}
          key: ${{ matrix.os }}-${{ matrix.ocaml_version }}-${{ hashFiles('**\index.json') }}
      - name: Build dependencies
        if: steps.deps-cache-win.outputs.cache-hit != 'true' && steps.deps-cache-non-win.outputs.cache-hit != 'true'
        run: esy build-dependencies --release -P package-ci-${{ matrix.ocaml_version }}
      - name: Build
        run: esy build --release -P package-ci-${{ matrix.ocaml_version }}
      - name: Build test/dev dependencies
        if: steps.deps-cache-win.outputs.cache-hit != 'true' && steps.deps-cache-non-win.outputs.cache-hit != 'true'
        run: esy build-dependencies -P package-ci-${{ matrix.ocaml_version }}
      - name: Test
        run: esy build -P package-ci-${{ matrix.ocaml_version }} -- dune runtest --no-buffer --force
      - name: Cleanup global store
        run: |
          exit 0
          esy install
          esy cleanup --dry-run .
          esy cleanup .
